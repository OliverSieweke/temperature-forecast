[tool.black] # https://black.readthedocs.io/en/stable/pyproject_toml.html
target-version = ['py38']
include = '\.pyi?$' # Default
exclude = '''
# Directory exclusions
/(
  # Defaults:
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  # Add additional patterns here:
  # | my_directory
)/

| # File exclusions
/(
  # Add additional file patterns here:
  # my_file\.py
)
'''


[tool.isort] # https://github.com/timothycrosley/isort/wiki/isort-Settings#full-reference-of-isort-settings
# Compatibility with Black (https://black.readthedocs.io/en/stable/the_black_code_style.html#how-black-wraps-lines)
# Style ---------------------
line_length=88
wrap_length=88
multi_line_output=3
combine_star='True'
combine_as_imports='True'
balanced_wrapping='True'
indent=4
lines_after_imports=2
lines_between_types=0
include_trailing_comma='True'
use_parentheses='True'
# force_single_line  #Would override mult-line_output
# force_grid_wrap    #Would override mult-line_output
# Sections ------------------
known_datascience=['pandas', 'numpy', 'scipy']
known_third_party = []
import_heading_stdlib="Standard Library ---------------------------------------------------------------------"
import_heading_thirdparty="Third Party --------------------------------------------------------------------------"
import_heading_datascience="Data Science"
import_heading_firstparty="Project ------------------------------------------------------------------------------"
# forced_separate=""
# Order ---------------------
sections=['FUTURE','STDLIB', 'THIRDPARTY', 'DATASCIENCE', 'FIRSTPARTY','LOCALFOLDER']
case_sensitive='False'
length_sort='False'
order_by_type='True'
force_alphabetical_sort='False'
force_sort_within_sections='False'
from_first='False'
reverse-relative='True'
# force_to_top=""
# Inclusions/Exclusions -----
# skip               # Requires full file path
skip_glob=[
    ".eggs/**",
   ".git/*",
   ".hg/*",
   ".mypy_cache/*",
   ".tox/*",
   ".venv/*",
   "_build/*",
   "buck-out/*",
   "build/*",
   "dist/*",
  # Add additional patterns here:
   "docs/source/conf.py" # File aut-generated by sphinx
]
filter_files=[
     ".eggs/**",
    ".git/*",
    ".hg/*",
    ".mypy_cache/*",
    ".tox/*",
    ".venv/*",
    "_build/*",
    "buck-out/*",
    "build/*",
    "dist/*",
   # Add additional patterns here:
    "docs/source/conf.py" # File aut-generated by sphinx
]
# not_skip=[]
# Other ---------------------
atomic='False'


[tool.pylint.master]
jobs="0"    # Auto-detect the number of processors
fail-under="10"
ignore-patterns='''
    \.eggs
    |\.git
    |\.hg
    |\.mypy_cache
    |\.tox
    |\.venv
    |_build
    |buck-out
    |build
    |dist
    |conf.py
'''
persistent="no"
load-plugins=""
limit-inference-results="100"
suggestion-mode="yes"
unsafe-load-any-extension="no"
extension-pkg-whitelist=""
exit-zero="no"
from-stdin="no"

[tool.pylint.message_control]
confidence="HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED"
enable=""
disable="""
    bad-continuation,
    no-else-return,
    too-few-public-methods,
"""

[tool.pylint.reports]
output-format="text"
msg-template="{path}:{line}:{column}: Pylint: {msg}. [{msg_id}: {symbol}]"
reports="yes"   # Not availalbe with multiple jobs
score="no"      # Not availalbe with multiple jobs
evaluation="10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)"

[tool.pylint.refactoring]
max-nested-blocks="5"
never-returning-functions="sys.exit"

[tool.pylint.logging]
logging-format-style="new"
logging-modules="logging"

[tool.pylint.spelling]
spelling-dict="en_US" # Requires pyenchant to be installed
max-spelling-suggestions="0"
spelling-ignore-words=""
spelling-private-dict-file=""
spelling-store-unknown-words="no"

[tool.pylint.miscellaneous]
notes="TODO,FIXME,THINK"
notes-rgx=""

[tool.pylint.typecheck]
contextmanager-decorators="contextlib.contextmanager"
generated-members=""
ignore-mixin-members="yes"
ignore-none="yes"
ignore-on-opaque-inference="yes"
ignored-classes="optparse.Values,thread._local,_thread._local"
ignored-modules=""
missing-member-hint="yes"
missing-member-hint-distance="1"
missing-member-max-choices="1"
signature-mutators=""


[tool.pylint.variables]
additional-builtins=""
allow-global-unused-variables="yes"
callbacks="_cb"
dummy-variables-rgx=""
ignored-argument-names=""
init-import="yes"
redefining-builtins-modules="six.moves,past.builtins,future.builtins,builtins,io"

[tool.pylint.format] # Taken care of by black, mostly included for error messages
expected-line-ending-format="LF"
indent-after-paren="4"
indent-string="    "
max-line-length="88"
ignore-long-lines="^\\s*(# )?<?https?://\\S+>?$"
no-space-check="trailing-comma"
single-line-class-stmt="no"
single-line-if-stmt="no"
max-module-lines="1000"

[tool.pylint.similarities]
min-similarity-lines="4"
ignore-comments="yes"
ignore-docstrings="yes"
ignore-imports="no"

[tool.pylint.basic]
argument-naming-style="snake_case"
# argument-rgx=
attr-naming-style="snake_case"
# attr-rgx=
class-attribute-naming-style="snake_case"
# class-attribute-rgx=
class-naming-style="PascalCase"
# class-rgx=
const-naming-style="UPPER_CASE"
# const-rgx=
function-naming-style="snake_case"
# function-rgx=
inlinevar-naming-style="snake_case"
# inlinevar-rgx=
method-naming-style="snake_case"
# method-rgx=
module-naming-style="snake_case"
# module-rgx=
variable-naming-style="snake_case"
# variable-rgx=
good-names="i,j,k,_,df"
good-names-rgxs=""
bad-names="foo,bar,baz,toto,tutu,tata"
bad-names-rgxs=""
docstring-min-length="-1"
include-naming-hint="no"
name-group=""
no-docstring-rgx="^_"
property-classes="abc.abstractproperty"

[tool.pylint.string]
check-quote-consistency="yes"
check-str-concat-over-line-jumps="yes"

[tool.pylint.imports] # Taken care of by isort, mostly included for error messages
allow-any-import-level=""
allow-wildcard-with-all="no"
analyse-fallback-blocks="no"
deprecated-modules="optparse,tkinter.tix"
ext-import-graph=""
import-graph=""
int-import-graph=""
known-standard-library=""
known-third-party="enchant"
preferred-modules=""

[tool.pylint.classes]
defining-attr-methods="__init__,__new__,setUp,__post_init__"
exclude-protected="_asdict,_fields,_replace,_source,_make"
valid-classmethod-first-arg="cls"
valid-metaclass-classmethod-first-arg="cls"

[tool.pylint.design]
max-args="5"
max-attributes="7"
max-bool-expr="5"
max-branches="12"
max-locals="15"
max-parents="7"
min-public-methods="2"
max-public-methods="20"
max-returns="6"
max-statements="50"

[tool.pylint.exceptions]
overgeneral-exceptions="BaseException,Exception"
